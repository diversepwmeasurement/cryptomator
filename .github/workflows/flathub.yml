jobs:
  flathub:
    env:
      FLATHUB_PR_URL: tbd
    name: Create PR for flathub
    needs:
    - tarball
    - get-version
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        repository: flathub/org.cryptomator.Cryptomator
        token: ${{ secrets.CRYPTOBOT_WINGET_TOKEN }}
    - continue-on-error: true
      name: Checkout release branch
      run: 'git checkout -b release/${{ needs.get-version.outputs.semVerStr }}

        '
    - continue-on-error: true
      name: Update build file
      run: 'sed -i -e ''s/VERSION: [0-9]\+\.[0-9]\+\.[0-9]\+.*/VERSION: ${{ needs.get-version.outputs.semVerStr
        }}/g'' org.cryptomator.Cryptomator.yaml

        sed -i -e ''s/sha512: [0-9A-Za-z_\+-]\{128\} #CRYPTOMATOR/sha512: ${{ needs.tarball.outputs.sha512
        }} #CRYPTOMATOR/g'' org.cryptomator.Cryptomator.yaml

        sed -i -e ''s;url: https://github.com/cryptomator/cryptomator/archive/refs/tags/[^[:blank:]]\+;url:
        ${{ needs.tarball.outputs.url }};g'' org.cryptomator.Cryptomator.yaml

        '
    - continue-on-error: true
      name: Commit and push
      run: 'git config user.name "${{ github.actor }}"

        git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

        git config push.autoSetupRemote true

        git stage .

        git commit -m "Prepare release ${{needs.get-version.outputs.semVerStr}}"

        git push

        '
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.CRYPTOBOT_WINGET_TOKEN }}
      name: Create pull request
      run: 'printf "> [!IMPORTANT]\n> Todos:\n> - [ ] Update maven dependencies\n>
        - [ ] Check for JDK update\n> - [ ] Check for JFX update" > pr_body.md

        PR_URL=$(gh pr create --title "Release ${{ needs.get-version.outputs.semVerStr
        }}" --body-file pr_body.md)

        echo "FLATHUB_PR_URL=$PR_URL" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      env:
        MSG_MINIMAL: true
        SLACK_CHANNEL: cryptomator-desktop
        SLACK_FOOTER: false
        SLACK_ICON: false
        SLACK_ICON_EMOJI: ':bot:'
        SLACK_MESSAGE: See <${{ env.FLATHUB_PR_URL }}|PR> on how to proceed.>.
        SLACK_TITLE: Flathub release PR created for ${{ github.event.repository.name
          }} ${{ github.event.release.tag_name }} created.
        SLACK_USERNAME: Cryptobot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: github.event_name == 'release'
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version: ${{ inputs.tag }}
  tarball:
    if: github.event_name == 'workflow_dispatch' || needs.get-version.outputs.versionType
      == 'stable'
    name: Determines tarball url and compute checksum
    needs:
    - get-version
    outputs:
      sha512: ${{ steps.sha512.outputs.sha512}}
      url: ${{ steps.url.outputs.url}}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: url
      name: Determine tarball url
      run: "URL=\"\";\nif [[ -n \"${{ inputs.tag }}\"  ]]; then\n  URL=\"https://github.com/cryptomator/cryptomator/archive/refs/tags/${{\
        \ inputs.tag }}.tar.gz\"\nelse\n  URL=\"https://github.com/cryptomator/cryptomator/archive/refs/tags/${{\
        \ github.event.release.tag_name }}.tar.gz\"\nfi\necho \"url=${URL}\" >> \"\
        $GITHUB_OUTPUT\"\n"
    - continue-on-error: true
      id: sha512
      name: Download source tarball and compute checksum
      run: 'curl --silent --fail-with-body -L -H "Accept: application/vnd.github+json"
        ${{ steps.url.outputs.url }} --output cryptomator.tar.gz

        TARBALL_SHA512=$(sha512sum cryptomator.tar.gz | cut -d '' '' -f1)

        echo "sha512=${TARBALL_SHA512}" >> "$GITHUB_OUTPUT"

        '
name: Create PR for flathub
on:
  repository_dispatch:
    types: trigger-ga___flathub.yml
